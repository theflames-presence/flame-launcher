name: Build Fmcl For Windows

on:
  push:
    branches:
      - main
    paths:
      - 'xmcl-runtime/**'
      - 'xmcl-runtime-api/**'
      - 'xmcl-keystone-ui/**'
      - 'xmcl-electron-app/**'
      - 'package.json'
      - 'pnpm-lock.yaml'
  workflow_dispatch:

jobs:

  fmcl-build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Setup Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Setup pnpm
      uses: pnpm/action-setup@v3
      with:
        version: 9.3.0
        run_install: false

    - name: Restore pnpm cache
      uses: actions/cache@v4
      with:
        path: ~/.local/share/pnpm/store/v3
        key: pnpm-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          pnpm-${{ runner.os }}-

    - name: Fix node-gyp and Python
      run: |
        python -m pip install --upgrade pip setuptools wheel packaging

    - name: Install dependencies
      run: pnpm instal
    - name: Ensure terser is installed
      run: pnpm add -D terser
    - name: Build all
      run: |
        pnpm run --prefix xmcl-keystone-ui build
        pnpm run --prefix xmcl-electron-app build:all
      env:
        BUILD_NUMBER: ${{ secrets.FMCL_VERSION }}
        NODE_OPTIONS: --max-old-space-size=32768
        NODE_ENV: production
        CURSEFORGE_API_KEY: ${{ secrets.CURSEFORGE_API_TOKEN }}

    - name: Fmcl-build-installer-x64
      uses: Minionguyjpro/Inno-Setup-Action@v1.2.2
      with:
        path: src/flamelauncher-build-x64.iss
        options: /O+

    - name: Fmcl-build-installer-x32
      uses: Minionguyjpro/Inno-Setup-Action@v1.2.2
      with:
        path: src/flamelauncher-build-x32.iss
        options: /O+

    - name: FMCL-x64-Upload-App
      uses: actions/upload-artifact@v4
      with:
        name: FMCL-WINDOWS-x64-v${{ secrets.FMCL_VERSION }}-App
        path: src\output\Flame-Launcher.-v${{ secrets.FMCL_VERSION }}.-setup-x64.exe

    - name: FMCL-x32-Upload-App
      uses: actions/upload-artifact@v4
      with:
        name: FMCL-WINDOWS-x32-v${{ secrets.FMCL_VERSION }}-App
        path: src\output\Flame-Launcher.-v${{ secrets.FMCL_VERSION }}.-setup-x32.exe

    - name: FMCL-x64-Upload-Archive
      uses: actions/upload-artifact@v4
      with:
        name: FMCL-WINDOWS-x64-v${{ secrets.FMCL_VERSION }}-Zip
        path: xmcl-electron-app\build\output\fmcl-${{ secrets.FMCL_VERSION }}-win32-x64.zip

    - name: FMCL-x32-Upload-Archive
      uses: actions/upload-artifact@v4
      with:
        name: FMCL-WINDOWS-x32-v${{ secrets.FMCL_VERSION }}-Zip
        path: xmcl-electron-app\build\output\fmcl-${{ secrets.FMCL_VERSION }}-win32-ia32.zip

    - name: Create Github Release
      id: create-new-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ secrets.FMCL_VERSION }}
        release_name: v${{ secrets.FMCL_VERSION }}

    - name: FMCL-x64-Upload Archive to Github 
      id: upload-release-x64-archive
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-new-release.outputs.upload_url }}
        asset_path: xmcl-electron-app\build\output\fmcl-${{ secrets.FMCL_VERSION }}-win32-x64.zip
        asset_name: fmcl-${{ secrets.FMCL_VERSION }}-win32-x64.zip
        asset_content_type: application/zip

    - name: FMCL-x32-Upload Archive to Github 
      id: upload-release-x32-archive
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-new-release.outputs.upload_url }}
        asset_path: xmcl-electron-app\build\output\fmcl-${{ secrets.FMCL_VERSION }}-win32-ia32.zip
        asset_name: fmcl-${{ secrets.FMCL_VERSION }}-win32-ia32.zip
        asset_content_type: application/zip

    - name: FMCL-x64-Upload App to Github 
      id: upload-release-x64-app
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-new-release.outputs.upload_url }}
        asset_path: src\output\Flame-Launcher.-v${{ secrets.FMCL_VERSION }}.-setup-x64.exe
        asset_name: Flame-Launcher.-v${{ secrets.FMCL_VERSION }}.-setup-x64.exe
        asset_content_type: application/vnd.microsoft.portable-executable

    - name: FMCL-x32-Upload App to Github 
      id: upload-release-x32-app
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-new-release.outputs.upload_url }}
        asset_path: src\output\Flame-Launcher.-v${{ secrets.FMCL_VERSION }}.-setup-x32.exe
        asset_name: Flame-Launcher.-v${{ secrets.FMCL_VERSION }}.-setup-x32.exe
        asset_content_type: application/vnd.microsoft.portable-executable
